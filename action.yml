name: 'Sync Worklog Action'
description: 'Finds the next available filename, adds the worklog to a new branch, and opens a pull request.'

inputs:
  target_repo:
    description: 'The repository to create the pull request in (e.g., "owner/repo").'
    required: true
  target_branch:
    description: 'The base branch to create the pull request against.'
    required: false
    default: 'main'
  destination_path:
    description: 'The folder path in the target repo to place the new file (e.g., "worklogs").'
    required: false
    default: 'content'
  token:
    description: 'A Personal Access Token (PAT) with repo scope for the target repository.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Git
      shell: bash
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Clone Target Repository
      shell: bash
      run: |
        git clone https://x-access-token:${{ inputs.token }}@github.com/${{ inputs.target_repo }}.git target_repo_clone

    - name: Create Branch and Process Files
      shell: bash
      run: |
        cd target_repo_clone
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
        
        BRANCH_NAME="update/${REPO_NAME}-${{ github.sha }}"
        git checkout -b $BRANCH_NAME
        echo "✅ Created new branch: $BRANCH_NAME"
        
        FILES_ADDED=0

        if [ -f ../WORKLOG.md ]; then
            echo "Processing WORKLOG.md..."
            DEST_SUBDIR="${{ inputs.destination_path }}/worklog"
            mkdir -p "$DEST_SUBDIR"
            BASE_FILENAME="$DEST_SUBDIR/${REPO_NAME}-WORKLOG"
            EXTENSION=".md"
            FINAL_FILENAME="${BASE_FILENAME}${EXTENSION}"
            COUNTER=1
            while [ -f "$FINAL_FILENAME" ]; do
              FINAL_FILENAME="${BASE_FILENAME}-${COUNTER}${EXTENSION}"
              COUNTER=$((COUNTER + 1))
            done
            cp ../WORKLOG.md "$FINAL_FILENAME"
            echo "Copied WORKLOG.md to $FINAL_FILENAME"
            FILES_ADDED=1
        fi

        if [ -f ../PROJECT.md ]; then
            echo "Processing PROJECT.md..."
            DEST_SUBDIR="${{ inputs.destination_path }}/project"
            mkdir -p "$DEST_SUBDIR"
            BASE_FILENAME="$DEST_SUBDIR/${REPO_NAME}-PROJECT"
            EXTENSION=".md"
            FINAL_FILENAME="${BASE_FILENAME}${EXTENSION}"
            COUNTER=1
            while [ -f "$FINAL_FILENAME" ]; do
              FINAL_FILENAME="${BASE_FILENAME}-${COUNTER}${EXTENSION}"
              COUNTER=$((COUNTER + 1))
            done
            cp ../PROJECT.md "$FINAL_FILENAME"
            echo "Copied PROJECT.md to $FINAL_FILENAME"
            FILES_ADDED=1
        fi
        
        echo "FILES_ADDED=$FILES_ADDED" >> $GITHUB_ENV
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Commit and Push Changes
      if: env.FILES_ADDED == '1'
      shell: bash
      run: |
        cd target_repo_clone
        git add .
        git commit -m "feat(docs): Sync project files from ${{ github.repository }}"
        git push origin ${{ env.BRANCH_NAME }}

    - name: Create Pull Request
      if: env.FILES_ADDED == '1'
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        gh pr create --repo ${{ inputs.target_repo }} \
           --title "Sync project files from ${{ github.repository }}" \
           --body "Automated PR to sync updated project documentation." \
           --base "${{ inputs.target_branch }}" \
           --head "${{ env.BRANCH_NAME }}"
        echo "✅ Pull request created."

