name: 'Sync Worklog Action'
description: 'Clones a target repo, copies the WORKLOG.md, and creates a PR.'

inputs:
  target_repo:
    description: 'The repository to merge the worklog into (e.g., "owner/repo").'
    required: true
  target_branch:
    description: 'The base branch to create the pull request against.'
    required: false
    default: 'main'
  destination_path:
    description: 'The folder path in the target repo to place the new file (e.g., "worklogs").'
    required: false
    default: 'worklogs'
  token:
    description: 'A Personal Access Token (PAT) with repo scope for the target repository.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Git
      shell: bash
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Clone Target Repository
      shell: bash
      run: |
        git clone https://x-access-token:${{ inputs.token }}@github.com/${{ inputs.target_repo }}.git target_repo_clone

    - name: Create New Branch and Copy File
      shell: bash
      run: |
        cd target_repo_clone
        
        # Sanitize the source repo name (e.g., "owner/my-project" -> "owner-my-project")
        SANITIZED_REPO_NAME=$(echo "${{ github.repository }}" | tr '/' '-')
        
        BRANCH_NAME="worklog/${SANITIZED_REPO_NAME}-${{ github.sha }}"
        git checkout -b $BRANCH_NAME
        
        mkdir -p "${{ inputs.destination_path }}"

        NEW_FILENAME="${{ inputs.destination_path }}/${SANITIZED_REPO_NAME}-WORKLOG.md"
        
        cp ../WORKLOG.md "$NEW_FILENAME"
        
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Commit and Push Changes
      shell: bash
      run: |
        cd target_repo_clone
        git add .

        if ! git diff --staged --quiet; then
          git commit -m "feat(worklog): Add worklog from ${{ github.repository }}"
          git push origin ${{ env.BRANCH_NAME }}
        else
          echo "No changes to commit."
        fi

    - name: Create Pull Request in Target Repo
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        cd target_repo_clone

        if git rev-parse --verify "origin/${{ env.BRANCH_NAME }}" >/dev/null 2>&1; then
          gh pr create --repo ${{ inputs.target_repo }} \
             --title "New Worklog from ${{ github.repository }}" \
             --body "This PR was automatically generated by a GitHub Action to sync the latest WORKLOG.md." \
             --base "${{ inputs.target_branch }}" \
             --head "${{ env.BRANCH_NAME }}"
        else
          echo "Branch was not pushed, skipping PR creation."
        fi
